@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@inject IViewLocalizer L

@{

    string languageId = Language.Languages[0].Id.Substring(0, 2);
    string languageName = Language.Languages[0].Name;


    try
    {

        //languageId = Context.Request.Cookies[CookieRequestCultureProvider.DefaultCookieName].Substring(2, 2);
        languageName = Language.LanguageDictionary[languageId].Name;

    }
    catch { languageId = Language.Languages[0].Id.Substring(0, 2); }

    var thisPage = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";

}

<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
      @L["Nederlands"]
  </button>
  <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
       @foreach (Language l in Language.Languages)
          {
                 <li><a class="dropdown-item" asp-area="" asp-controller="Home" asp-action="ChangeLanguage" asp-route-id="@l.Id" asp-route-returnUrl=@thisPage>@l.Name</a></li>
          }
  </ul>
</div>

@*<ul class="navbar-nav">

    <li class="nav-item dropdown">

        <a class="nav-link text-dark dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@languageName</a>
        <ul class="dropdown-menu">
            @foreach (Language l in Language.Languages)
                if (l.Id != languageId)
                {

                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="ChangeLanguage" asp-route-id="@l.Id" asp-route-returnUrl=@thisPage>@l.Name</a>
                    </li>

                }
        </ul>
    </li>
</ul>*@